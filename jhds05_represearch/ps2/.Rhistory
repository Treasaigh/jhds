library(swirl)
swirl()
swirl()
?sqrt
cars
10
range(cars$price)
sum(cars$price)
sum(cars$price) / count(cars$price)
n(cars$price)
sum(cars$price) / length(cars$price)
mean(cars$price)
mpg.midsize
sort(mpg.midsize)
mpg_sorted <- sort(mpg.midsize)
19
median(mpg.midsize)
summary(cars$mpgCity)
25
1.9
19
15
20
sd(mpg.midsize)
sd(mpg.midsize) ^ 2
24
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
cor(gpa_nor, gch_nor)
l_nor <- lm(gpa_nor ~ gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
z <- x * w
mean(z)
mean(x)
weighted.mean(x,w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
cor(x,y)
cor(y,x)
plot(x,y)
sum(x*y)
sum(x*y) / sum(x^2)
data(mtcars)
lm_cars <- lm(mtcars$mpg ~ mtcars$wt)
lm_cars
lm_cars <- lm(mtcars$wt ~ mtcars$mpg)
lm_cars
lm_cars <- lm(mtcars$mpg ~ mtcars$wt)
lm_cars
abline(0,1)
abline(0,1)
plot()
abline(0,1)
plot(0,0)
abline(0,1)
abline(0,.5)
plot(0,0)
abline(0,.5)
1.5 * .4
mean(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
std(x)
sd(x)
(x - mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
lm(x ~ y)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
file_url <- 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip'
temp <- tempfile()
download.file(file_url, temp)
activity <- read.csv(file = unz(temp,'activity.csv'),
header = TRUE,
na.strings = 'NA')
unlink(temp)
activity$date <- as.Date(activity$date, '%Y-%m-%d')
activity <- activity[order(activity$date, activity$interval),]
act_nonnull <- subset(activity, !is.na(activity$steps))
library(ggplot2)
g_steps_sum <- aggregate(x = act_nonnull$steps,
by = list(date = act_nonnull$date),
FUN = sum)
ggplot(data = g_steps_sum, aes(x = x)) +
geom_histogram(fill = 'navy', binwidth = 500) +
ggtitle('Histogram: Total Steps Taken Per Day') +
xlab('Daily Average of Steps Taken') +
ylab('Count of Days')
g_steps_mean <- aggregate(x = act_nonnull$steps,
by = list(date = act_nonnull$interval),
FUN = mean)
head(g_steps_mean)
g_steps_mean <- aggregate(x = act_nonnull$steps,
by = list(time_interval = act_nonnull$interval),
FUN = mean)
head(g_steps_mean)
g_steps_mean <- aggregate(act_nonnull$steps,
by = list(time_interval = act_nonnull$interval),
FUN = mean)
head(g_steps_mean)
g_steps_mean <- aggregate(x = act_nonnull$steps,
by = list(time_interval = act_nonnull$interval),
FUN = mean)
head(g_steps_mean)
max(g_steps_mean$x)
g_steps_mean[g_steps_mean$x == max(g_steps_mean$x),]
g_steps_mean$time_interval[g_steps_mean$x == max(g_steps_mean$x)]
ggplot(data = g_steps_mean, aes(x = time_interval, y = x) +
geom_line()
ggplot(data = g_steps_mean, aes(x = time_interval, y = x)) +
geom_line()
ggplot(data = g_steps_mean, aes(x = time_interval, y = x)) +
geom_line()
ggplot(data = g_steps_mean, aes(x = time_interval, y = x)) +
geom_line() +
ggtitle('Daily Average Steps Taken Throughout Day (5 Minute Intervals)') +
xlab('5 Minute Interval Throughout Day') +
ylab('Daily Average of Steps Taken Each Interval')
ggplot(data = g_steps_mean, aes(x = time_interval, y = x)) +
geom_line(color = 'green', size = 2)
ggplot(data = g_steps_mean, aes(x = time_interval, y = x)) +
geom_line(color = 'green', size = 1.5)
ggplot(data = g_steps_mean, aes(x = time_interval, y = x)) +
geom_line(color = 'green', size = 0.9)
ggplot(data = g_steps_mean, aes(x = time_interval, y = x)) +
geom_line(color = 'dark green', size = 0.9)
ggplot(data = g_steps_mean, aes(x = time_interval, y = x)) +
geom_line(color = 'dark green', size = 1.1)
ggplot(data = g_steps_mean, aes(x = time_interval, y = x)) +
geom_line(color = 'dark green', size = 1.1) +
ggtitle('Daily Average Steps Taken Throughout Day (5 Minute Intervals)') +
xlab('5 Minute Interval Throughout Day') +
ylab('Daily Average of Steps Taken Each Interval')
ggplot(data = g_steps_mean, aes(x = time_interval, y = x)) +
geom_line(color = 'dark green', size = 1.1) +
ggtitle('Daily Average Steps Taken Throughout Day (5 Minute Intervals)') +
xlab('5 Minute Interval Throughout Day') +
ylab('Daily Average of Steps Taken Each Interval')
act_impute <- merge(x = activity, by.x = 'interval',
y = g_steps_mean, by.y = 'time_interval')
names(act_impute)
names(act_impute)[4]
names(act_impute)['x']
names(act_impute)[['x']]
names(act_impute)[4]
names(act_impute)[4] <- 'g_mean'
names(act_impute)
class(steps)
class(act_impute$steps)
class(act_impute$steps)
act_impute$steps <- as.numeric(act_impute$steps)
class(act_impute$steps)
names(act_impute)[4] <- 'g_mean_steps'
head(act_impute$steps)
sum(is.na(act_impute$steps))
act_impute$steps_impute <- if (is.na(act_impute$steps) {
act_impute$g_mean_steps
} else {
act_impute$steps
})
act_impute$steps_impute <- if (is.na(act_impute$steps)) {
act_impute$g_mean_steps
} else {
act_impute$steps
}
act_impute <- merge(x = activity, by.x = 'interval',
y = g_steps_mean, by.y = 'time_interval')
names(act_impute)[4] <- 'g_mean_steps'
act_impute$steps <- as.numeric(act_impute$steps)
act_impute$steps_impute <- as.numeric(act_impute$steps)
act_impute <- merge(x = activity, by.x = 'interval',
y = g_steps_mean, by.y = 'time_interval')
names(act_impute)[4] <- 'g_mean_steps'
act_impute$steps_impute <- as.numeric(act_impute$steps)
act_impute <- merge(x = activity, by.x = 'interval',
y = g_steps_mean, by.y = 'time_interval')
names(act_impute)[4] <- 'g_mean_steps'
act_impute$steps_impute <- as.numeric(act_impute$steps)
sum(is.na(act_impute$steps))
act_impute$steps_impute[is.na()]
act_impute$steps_impute[is.na(act_impute$steps_impute)]
sum(is.na(act_impute$steps))
act_impute$steps_impute[is.na(act_impute$steps_impute)] <- act_impute$g_mean_steps
act_impute <- merge(x = activity, by.x = 'interval',
y = g_steps_mean, by.y = 'time_interval')
names(act_impute)[4] <- 'g_mean_steps'
act_impute$steps_impute <- as.numeric(act_impute$steps)
act_impute$steps_impute[is.na(act_impute$steps_impute)] <- act_impute$g_mean_steps[is.na(act_impute$steps_impute)]
head(act_impute$steps_impute)
act_impute <- merge(x = activity, by.x = 'interval',
y = g_steps_mean, by.y = 'time_interval')
names(act_impute)[4] <- 'g_mean_steps'
head(act_impute$steps)
act_impute$steps_impute <- as.numeric(act_impute$steps)
head(act_impute$steps_impute)
act_impute$steps_impute[is.na(act_impute$steps_impute)] <- act_impute$g_mean_steps[is.na(act_impute$steps_impute)]
head(act_impute$steps_impute)
sum(is.na(act_impute$steps_impute))
g_steps_sum_impute <- aggregate(x = act_impute$steps,
by = list(date = act_impute$date),
FUN = sum)
steps_mean <- mean(g_steps_sum_impute$x)
steps_median <- median(g_steps_sum_impute$x)
steps_mean_impute <- mean(g_steps_sum_impute$x)
steps_median_impute <- median(g_steps_sum_impute$x)
steps_mean_impute
steps_median_impute
g_steps_sum_impute <- aggregate(x = act_impute$steps_impute,
by = list(date = act_impute$date),
FUN = sum)
steps_mean_impute <- mean(g_steps_sum_impute$x)
steps_median_impute <- median(g_steps_sum_impute$x)
steps_mean_impute
steps_median_impute
g_steps_sum <- aggregate(x = act_nonnull$steps,
by = list(date = act_nonnull$date),
FUN = sum)
steps_mean <- mean(g_steps_sum$x)
steps_median <- median(g_steps_sum$x)
steps_mean
steps_median
file_url <- 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip'
temp <- tempfile()
download.file(file_url, temp)
activity <- read.csv(file = unz(temp,'activity.csv'),
header = TRUE,
na.strings = 'NA')
unlink(temp)
activity$date <- as.Date(activity$date, '%Y-%m-%d')
activity <- activity[order(activity$date, activity$interval),]
act_nonnull <- subset(activity, !is.na(activity$steps))
library(ggplot2)
g_steps_sum <- aggregate(x = act_nonnull$steps,
by = list(date = act_nonnull$date),
FUN = sum)
steps_mean <- mean(g_steps_sum$x)
steps_median <- median(g_steps_sum$x)
steps_mean
steps_median
act_impute <- merge(x = activity, by.x = 'interval',
y = g_steps_mean, by.y = 'time_interval')
names(act_impute)[4] <- 'g_mean_steps'
act_impute$steps_impute <- as.numeric(act_impute$steps)
act_impute$steps_impute[is.na(act_impute$steps_impute)] <- act_impute$g_mean_steps[is.na(act_impute$steps_impute)]
g_steps_sum_impute <- aggregate(x = act_impute$steps_impute,
by = list(date = act_impute$date),
FUN = sum)
steps_mean_impute <- mean(g_steps_sum_impute$x)
steps_median_impute <- median(g_steps_sum_impute$x)
steps_mean_impute
steps_median_impute
act_impute <- merge(x = activity, by.x = 'interval',
y = g_steps_mean, by.y = 'time_interval')
g_steps_mean <- aggregate(x = act_nonnull$steps,
by = list(time_interval = act_nonnull$interval),
FUN = mean)
act_impute <- merge(x = activity, by.x = 'interval',
y = g_steps_mean, by.y = 'time_interval')
names(act_impute)[4] <- 'g_mean_steps'
act_impute$steps_impute <- as.numeric(act_impute$steps)
act_impute$steps_impute[is.na(act_impute$steps_impute)] <- act_impute$g_mean_steps[is.na(act_impute$steps_impute)]
g_steps_sum_impute <- aggregate(x = act_impute$steps_impute,
by = list(date = act_impute$date),
FUN = sum)
steps_mean_impute <- mean(g_steps_sum_impute$x)
steps_median_impute <- median(g_steps_sum_impute$x)
steps_mean_impute
steps_median_impute
ggplot(data = g_steps_sum, aes(x = x)) +
geom_histogram(fill = 'navy', binwidth = 500) +
ggtitle('Histogram: Total Steps Taken Per Day') +
xlab('Daily Average of Steps Taken') +
ylab('Count of Days')
ggplot(data = g_steps_sum_impute, aes(x = x)) +
geom_histogram(fill = 'blue', binwidth = 500) +
ggtitle('Histogram: Total Steps Taken Per Day (Imputed Missing Data)') +
xlab('Daily Average of Steps Taken') +
ylab('Count of Days')
ggplot(data = g_steps_sum_impute, aes(x = x)) +
geom_histogram(fill = 'blue', binwidth = 500) +
ggtitle('Histogram: Total Steps Taken Per Day (Missing Data Imputed)') +
xlab('Daily Average of Steps Taken') +
ylab('Count of Days')
act_impute$weekday <- weekdays(act_impute$date)
head(act_impute$weekday)
unique(act_impute$weekday)
act_impute$weekday <- weekdays(act_impute$date, abbreviate=TRUE)
unique(act_impute$weekday)
act_impute$weekday[act_impute$weekday %in% c('Mon','Tue','Wed','Thu','Fri')]
act_impute$weekday %in% c('Mon','Tue','Wed','Thu','Fri')
act_impute$day_of_week <- weekdays(act_impute$date, abbreviate=TRUE)
unique(act_impute$day_of_week)
act_impute$weekday <- act_impute$day_of_week %in% c('Mon','Tue','Wed','Thu','Fri')
length(act_impute$weekday)
length(act_impute$weekday[act_impute$weekday == TRUE])
length(act_impute$weekday[act_impute$weekday == FALSE])
c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')
ref_dow <- data.frame(day_of_week = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))
ref_dow <- data.frame(day_of_week = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'),
dow_type = c('weekday','weekday','weekday','weekday','weekday','weekend','weekend'))
act_impute <- merge(x = activity, by.x = 'interval',
y = g_steps_mean, by.y = 'time_interval')
names(act_impute)[4] <- 'g_mean_steps'
g_steps_sum_impute <- aggregate(x = act_impute$steps_impute,
by = list(date = act_impute$date),
FUN = sum)
act_impute$steps_impute <- as.numeric(act_impute$steps)
act_impute$steps_impute[is.na(act_impute$steps_impute)] <- act_impute$g_mean_steps[is.na(act_impute$steps_impute)]
act_impute$day_of_week <- weekdays(act_impute$date, abbreviate=TRUE)
ref_dow <- data.frame(day_of_week = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'),
dow_type = c('weekday','weekday','weekday','weekday','weekday','weekend','weekend'))
act_impute <- merge(x = act_impute, by.x = 'day_of_week',
y = ref_dow, by.y = 'day_of_week')
g_steps_sum_impute_wdwe <- aggregate(x = act_impute$steps_impute,
by = list(date = act_impute$date, dow_type = act_impute$dow_type),
FUN = sum)
unique(g_steps_sum_impute_wdwe$dow_type)
g_steps_mean_impute_wdwe <- aggregate(x = act_impute$steps_impute,
by = list(interval = act_nonnull$interval, dow_type = act_impute$dow_type),
FUN = mean)
g_steps_mean_impute_wdwe <- aggregate(x = act_impute$steps_impute,
by = list(interval = act_impute$interval, dow_type = act_impute$dow_type),
FUN = mean)
View(g_steps_mean_impute_wdwe)
ggplot(data = g_steps_mean_impute_wdwe, aes(x = interval, y = x)) +
geom_line(color = 'dark green', size = 1.1) +
ggtitle('Daily Average Steps Taken Throughout Day (5 Minute Intervals)') +
xlab('5 Minute Interval Throughout Day') +
ylab('Daily Average of Steps Taken Each Interval')
ggplot(data = g_steps_mean_impute_wdwe, aes(x = interval, y = x)) +
geom_line(color = dow_type, size = 1.1) +
ggtitle('Daily Average Steps Taken Throughout Day (5 Minute Intervals)') +
xlab('5 Minute Interval Throughout Day') +
ylab('Daily Average of Steps Taken Each Interval')
ggplot(data = g_steps_mean_impute_wdwe, aes(x = interval, y = x)) +
geom_line(color = g_steps_mean_impute_wdwe$dow_type, size = 1.1) +
ggtitle('Daily Average Steps Taken Throughout Day (5 Minute Intervals)') +
xlab('5 Minute Interval Throughout Day') +
ylab('Daily Average of Steps Taken Each Interval')
ggplot(data = g_steps_mean_impute_wdwe, aes(x = interval, y = x)) +
geom_line(size = 1.1) +
ggtitle('Daily Average Steps Taken Throughout Day (5 Minute Intervals)') +
xlab('5 Minute Interval Throughout Day') +
ylab('Daily Average of Steps Taken Each Interval')
ggplot(data = g_steps_mean_impute_wdwe[g_steps_mean_impute_wdwe$dow_type == 'weekday',], aes(x = interval, y = x)) +
geom_line(size = 1.1) +
ggtitle('Daily Average Steps Taken Throughout Day (5 Minute Intervals)') +
xlab('5 Minute Interval Throughout Day') +
ylab('Daily Average of Steps Taken Each Interval')
ggplot(data = g_steps_mean_impute_wdwe[g_steps_mean_impute_wdwe$dow_type == 'weekend',], aes(x = interval, y = x)) +
geom_line(size = 1.1) +
ggtitle('Daily Average Steps Taken Throughout Day (5 Minute Intervals)') +
xlab('5 Minute Interval Throughout Day') +
ylab('Daily Average of Steps Taken Each Interval')
-2 + c(-1,1)
-2 + c(-1,1) * qt(0.975, 10 - 1) * 0.08/sqrt(10)
-2 + c(-1,1) * qt(0.975, 10 - 1) * -0.08/sqrt(10)
version
library(rmarkdown)
install.packages('rmarkdown')
setwd("~/Dropbox/Education/JHDS 5 - Reproducible Research/ps2")
getOption('rpubs.upload.method')
