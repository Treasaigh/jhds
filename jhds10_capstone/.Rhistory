udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
install.packages('KernSmooth')
library(KernSmooth)
install.packages("swirl")
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
# Overall function: given a square matrix, this will create an object that stores the
# original matrix, computes its inverse matrix, and stores the inverse matrix to be
# accessible without needing to compute it repeatedly from the original square matrix.
# Create a special matrix object that holds the passed matrix, its computed inverse,
# and enclosed functions to access the enclosed data computed.
makeCacheMatrix <- function(x = matrix()) {
mi <- NULL
set <- function(y) {
x <<- y
mi <<- NULL
}
get <- function() x
setinv <- function(matinv) mi <<- matinv
getinv <- function() mi
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
# returns the inverse of the cached matrix-like object instantiated above.
# If the inverse has already been computed, that value is accessed and returned.
# If the inverse has not yet been computed: it is computed, stored in the
# cache object, and then returned.
cacheSolve <- function(x, ...) {
mi <- x$getinv()
if(!is.null(mi)) {
message("getting cached data")
return(mi)
}
data <- x$get()
mi <- solve(data, ...)
x$setinv(mi)
mi
}
testrand <- matrix(data=rnorm(9), nrow=3, ncol=3)
testrand
solve(testrand)
testrand_c <- makeCacheMatrix(testrand)
cacheSolve(testrand_c)
testrand_c$get()
testrand_c$getinv()
testbig <- matrix(data=rnorm(10000), nrow=100, ncol=100)
testbig_c <- makeCacheMatrix(testbig)
cacheSolve(testbig_c)
identical(cacheSolve(testbig_c), solve(testbig))
identical(testbig_c$getinv(), solve(testbig))
identical(testbig, testbig_c$get())
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
install_from_swirl("Data Analysis")
swirl()
setwd("~/Dropbox/Education/JHDS 10 - Capstone")
library(stringr)
clean_curse <- function(df) {
curse_words <- scan(file = './data/curse_words.txt', what = 'character', sep = '\n')
output <- subset(df, !v %in% curse_words)
curse_sub <- c('fuck','shit','cunt','nigger')
for (each in curse_sub) {
output <- subset(output, (! str_detect(string = v, pattern = each)))
}
output
}
ref_all1 <- read.table(file = './data/int_ref_all_n1.csv',
header = TRUE, sep = '|', stringsAsFactors = FALSE)
ref_all1 <- clean_curse(ref_all1)
ref_all2 <- read.table(file = './data/int_ref_all_n2.csv',
header = TRUE, sep = '|', stringsAsFactors = FALSE)
ref_all2 <- clean_curse(ref_all2)
ref_all3 <- read.table(file = './data/int_ref_all_n3.csv',
header = TRUE, sep = '|', stringsAsFactors = FALSE)
ref_all3 <- clean_curse(ref_all3)
q01n3 <- subset(ref_all3, k1 == 'you' & k2 == 'must' & k3 == 'be')
rm(q01n3)
q01n3 <- subset(ref_all3, k1 == 'live' & k2 == 'and' & k3 == 'Id'
)
q01n2 <- subset(ref_all2, k1 == 'and' & k2 == 'Id')
q01n1 <- subset(ref_all1, k1 == 'Id')
q01n3 <- subset(ref_all3, k1 == 'live' & k2 == 'and' & k3 == 'id')
q01n2 <- subset(ref_all2, k1 == 'and' & k2 == 'id')
View(`q01n2`)
q01n2_v <- subset(ref_all2, k1 == 'and' & k2 == 'id' &
v %in% c('sleep','give','die','eat'))
View(`q01n2_v`)
q01n3 <- subset(ref_all3, k1 == 'live' & k2 == 'and' & k3 == 'id')
rm(q01n1,q01n2,q01n2_v,q01n3)
q02n3 <- subset(ref_all3, k1 == 'me' & k2 == 'about' & k3 == 'his')
View(`q02n3`)
q01n2 <- subset(ref_all2, k1 == 'about' & k2 == 'his')
rm(q01n2)
q02n2 <- subset(ref_all2, k1 == 'about' & k2 == 'his')
View(`q02n2`)
q02n2_v <- subset(ref_all2, k1 == 'about' & k2 == 'his' &
v %in% c('financial','spiritual','marital','horticultural'))
q02n2_v <- subset(ref_all2, k1 == 'about' & k2 == 'her' &
v %in% c('financial','spiritual','marital','horticultural'))
q02n2_v <- subset(ref_all2, k1 == 'about' & k2 == 'his' &
v %in% c('financial','spiritual','marital','horticultural'))
q03n2 <- subset(ref_all2, k2 == 'this')
View(`q03n2`)
q03n2 <- subset(ref_all2, k2 == 'this' &
v %in% c('weekend','month','decade','morning'))
View(`q03n2`)
q03n1 <- subset(ref_all1, k1 == 'this' &
v %in% c('weekend','month','decade','morning'))
View(`q03n1`)
q04n3 <- subset(ref_all3, k1 == 'helps' & k2 == 'reduce' & k3 == 'your')
q04n3 <- subset(ref_all3, k1 == 'helps' & k2 == 'reduce')
q04n3 <- subset(ref_all3, k1 == 'help' & k2 == 'reduce')
View(`q04n3`)
q04n2 <- subset(ref_all2, k1 == 'reduce' & k2 == 'your')
View(`q04n2`)
q05n3 <- subset(ref_all3, k1 == 'to' & k2 == 'take' & k3 == 'a')
View(`q05n3`)
q06n3 <- subset(ref_all3, k1 == 'to' & k2 == 'settle' & k3 == 'the')
View(`q06n3`)
q07n3 <- subset(ref_all3, k1 == 'groceries' & k2 == 'in' & k3 == 'each')
q07n2 <- subset(ref_all2, k1 == 'in' & k2 == 'each')
View(`q07n2`)
q07n2_v <- subset(ref_all2, k1 == 'in' & k2 == 'each' &
v %in% c('finger','toe','hand','arm'))
View(`q07n2_v`)
q08n3 <- subset(ref_all3, k1 == 'bottom' & k2 == 'to' & k3 == 'the')
View(`q08n3`)
q09n3 <- subset(ref_all3, k1 == 'bruises' & k2 == 'from' & k3 == 'playing')
q09n2 <- subset(ref_all2, k1 == 'from' & k2 == 'playing')
View(`q09n2`)
q09n1 <- subset(ref_all2, k1 == 'playing')
q09n1 <- subset(ref_all2, k1 == 'playing' &
v %in% c('outside','weekly','inside','daily'))
View(`q09n1`)
q09n1 <- subset(ref_all1, k1 == 'playing' &
v %in% c('outside','weekly','inside','daily'))
View(`q09n1`)
View(`q05n3`)
View(`q06n3`)
